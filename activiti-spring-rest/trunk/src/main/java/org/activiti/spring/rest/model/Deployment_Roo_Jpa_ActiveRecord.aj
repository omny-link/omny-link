// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.activiti.spring.rest.model;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.activiti.spring.rest.model.Deployment;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Deployment_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext
    transient EntityManager Deployment.entityManager;
    
    public static final List<String> Deployment.fieldNames4OrderClauseFilter = java.util.Arrays.asList("processEngine", "id", "name", "deploymentTime", "category", "url");
    
    public static final EntityManager Deployment.entityManager() {
        EntityManager em = new Deployment().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    @Transactional
    public void Deployment.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Deployment.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Deployment.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Deployment Deployment.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Deployment merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
